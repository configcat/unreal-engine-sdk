on:
  workflow_call:
    inputs:
      unreal-version:
        required: true
        type: string
      plugin_code:
        default: ""
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Free disk space
        run: |
          # time df -h
          sudo time swapoff -a
          sudo time rm -f /swapfile
          sudo time rm -rf /usr/local/lib/android
          sudo time rm -rf /usr/share/dotnet
          sudo time rm -rf /usr/share/swift
          sudo time rm -rf /usr/local/share/powershell
          sudo time rm -rf /usr/local/.ghcup
          sudo time rm -rf /usr/local/lib/node_modules
          sudo time rm -rf /usr/local/share/boost
          sudo time rm -rf /usr/lib/google-cloud-sdk
          sudo time rm -rf /usr/lib/jvm
          sudo time rm -rf /opt/pipx
          sudo time rm -rf /opt/ghc
          sudo time rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo time apt-get clean
          sudo time rm -rf /var/lib/apt/lists/*
          # time docker rmi $(docker image ls -aq)
          # time du --max-depth=3 --threshold=100M -h /usr /opt /var 2>/dev/null | sort -hr
          df -h

      - name: Log in to GitHub package registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start Docker container
        env:
          WORKSPACE_PATH: ${{ github.workspace }}
          UNREAL_VERSION: ${{ inputs.unreal-version }}
        run: |
          # We start the container with the user ID of the parent GH action user to avoid permission issues on volume.
          # For UE 5.4 we have to enable ipv6 to fix container startup issues. See https://github.com/adamrehn/ue4-docker/issues/357
          uid=$(id -u) # the GH action user ID
          gid=1000     # the ue4 group in the docker container
          user='gh'
          set -x
          docker network create --ipv6 --subnet 2001:0DB8::/112 ip6net
          docker run -td \
            --name unreal \
            --volume "$WORKSPACE_PATH:/workspace" \
            --workdir /workspace \
            --user $uid:$gid \
            --env HOME="/home/$user" \
            --env PATH="/home/$user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" \
            --network ip6net -p 80:80 \
            ghcr.io/epicgames/unreal-engine:dev-slim-"$UNREAL_VERSION"
          docker logout ghcr.io
          # Add the user so it has a home directory (needed to run tests later on)
          docker exec --user root unreal useradd -u $uid -g $gid --create-home $user
          # Ensure CA certs are in the right directory (needed for running tests)
          docker exec --user root unreal bash -c "
            mkdir -p /etc/pki/tls/certs ;
            cp /etc/ssl/certs/ca-certificates.crt /etc/pki/tls/certs/ca-bundle.crt "

          # Chown some paths to the GH user to make UE5 work properly. We can't just chown the whole UnrealEngine or
          # docker would implicitly have to copy it to the container and we would run out of space on the GH runner.
          docker exec --user root unreal bash -c "
            chown -R $uid /home/ue4/UnrealEngine/Engine/Binaries/ThirdParty/Mono/Linux ;
            chown -R $uid /home/ue4/UnrealEngine/Engine/Plugins/VirtualProduction/CaptureData ;
            chown -R $uid /home/ue4/UnrealEngine/Engine/Binaries/ThirdParty/DotNet "
            
          # Add the user so it has a home directory (needed for the pip cache later on)
          docker exec --user root unreal useradd -u $uid -g $gid --create-home $user

      - name: Setup C++ runtime
        run: docker exec --user root unreal bash -c '
          apt-get update ;
          apt-get install -y libstdc++6 build-essential libc++-dev libc++abi-dev'

      - name: Setup UE CLI
        run: docker exec unreal bash -c '
          pip3 install --upgrade pip ;
          pip3 install -Iv ue4cli==0.0.54 ;
          ue4 setroot /home/ue4/UnrealEngine '

      - uses: actions/checkout@v3
        if: ${{ inputs.plugin_code == '' }}
        with:
          path: plugin

      - uses: actions/download-artifact@v4
        if: ${{ inputs.plugin_code != '' }}
        with:
          name: ${{ inputs.plugin_code }}
          path: plugin

      - name: Build & package
        id: package-app
        run: |
          docker exec -w /workspace/plugin/ unreal ue4 package
